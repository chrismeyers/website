#!/bin/bash

# Server:
#   1. Make the directory /path/to/repo/{REPO_NAME}.git
#   2. git init --bare /path/to/repo/{REPO_NAME}.git
#   3. Create and edit /path/to/repo/{REPO_NAME}.git/hooks/post-receive
#     3a. Ensure the script is executable (chmod 755 post-receive)
#     3b. This needs to be updated manually when changes are made!
#   4. Create all directories in the --work-tree path
#   5. Create all credential directories and files
#   6. (Optional) Ensure the sudoers entry for the user pushing to production
#      has NOPASSWD setup for sudo commands used in this hook:
#        USER_NAME   ALL=NOPASSWD: CMD1, CMD2, CMD3
# Local:
#   1. Add new git remote: ssh://USER@IP/path/to/repo/{REPO_NAME}.git
#   2. Push to the new git remote

while read oldrev newrev ref
do
  if [[ $ref =~ .*/main$ ]];
  then
    echo "[DEPLOY] ${oldrev:0:7}..${newrev:0:7} $ref"

    echo "[DEPLOY] Checking out files to work tree"
    git --work-tree=/home/chris/www/chrismeyers-website --git-dir=/home/chris/repo/chrismeyers-website.git checkout -f main

    echo "[DEPLOY] Moving to project work tree root"
    cd /home/chris/www/chrismeyers-website

    echo "[DEPLOY] Syncing credentials"
    rsync -av /home/chris/creds/chrismeyers-website/web/ .

    echo "[DEPLOY] Building image and running container"
    bin/docker/build.sh
    bin/docker/run.sh -d --restart always
  else
    echo "Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server."
  fi
done
