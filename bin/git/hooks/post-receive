#!/bin/bash

# Setup:
#   1. Make the directory /path/to/repo/*.git
#   2. git init --bare /path/to/repo/*.git
#   3. Create and edit /path/to/repo/*.git/hooks/post-receive
#     3a. This needs to be updated manually when changes are made
#   4. Create all directories in the --work-tree path
#   5. Add new git remote: ssh://USER_NAME@IP/path/to/repo/*.git
#   6. Push to the new git remote
#
# Ensure the sudoers entry for the user pushing to production has NOPASSWD
# setup for sudo commands used in this hook:
#   USER_NAME   ALL=NOPASSWD: CMD1, CMD2, CMD3

while read oldrev newrev ref
do
  if [[ $ref =~ .*/master$ ]];
  then
    echo "Deploying $ref branch to production..."
    git --work-tree=/home/chris/www/chrismeyers.info --git-dir=/home/chris/repo/chrismeyers.info.git checkout -f

    cd /home/chris/www/chrismeyers.info/web
    docker build -t chrismeyers-info-web .
    docker stop chrismeyers-info-web
    docker run \
        -d \
        -p 8080:80 \
        --log-opt max-size=25m \
        --log-opt max-file=2 \
        --rm \
        --name chrismeyers-info-web \
        chrismeyers-info-web

    cd /home/chris/www/chrismeyers.info
    docker build -t chrismeyers-info-api -f api/Dockerfile .
    docker stop chrismeyers-info-api
    docker run \
        -d \
        --net=host \
        --log-opt max-size=25m \
        --log-opt max-file=2 \
        --rm \
        --name chrismeyers-info-api \
        chrismeyers-info-api
  else
    echo "Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server."
  fi
done
