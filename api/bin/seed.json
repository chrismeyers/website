{
  "images": [
    {
      "path": "/images/builds/mattBuild.jpg",
      "title": "Matt's Computer",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/builds/myBuild2013.jpg",
      "title": "My Computer 2013",
      "pos": 1,
      "orient": "port"
    },
    {
      "path": "/images/builds/markBuild.jpg",
      "title": "Mark's Computer",
      "pos": 1,
      "orient": "port"
    },
    {
      "path": "/images/builds/myBuild2016_liquid.jpg",
      "title": "My Computer 2016",
      "pos": 1,
      "orient": "port"
    },
    {
      "path": "/images/builds/jamesBuild.jpg",
      "title": "James's computer",
      "pos": 1,
      "orient": "port"
    },
    {
      "path": "/images/projects/genomic/genomic.png",
      "title": "Genomic Solutions Now! Software",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/pinelands/pinelands_landing.jpg",
      "title": "Pinelands landing page",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/pinelands/pinelands_tour.jpg",
      "title": "Pinelands tour page",
      "pos": 2,
      "orient": "square"
    },
    {
      "path": "/images/projects/pinelands/pinelands_contact.jpg",
      "title": "Pinelands contact page",
      "pos": 3,
      "orient": "square"
    },
    {
      "path": "/images/projects/ttt/ttt_land.png",
      "title": "Tic Tac Toe Landscape",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/ttt/ttt_port.png",
      "title": "Tic Tac Toe Portrait",
      "pos": 2,
      "orient": "port"
    },
    {
      "path": "/images/projects/lol_playerdata/loldata_landing.png",
      "title": "LoL player data landing page",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/lol_playerdata/loldata.png",
      "title": "LoL player data results",
      "pos": 2,
      "orient": "square"
    },
    {
      "path": "/images/projects/lol_playerdata/loldata_small.png",
      "title": "LoL player data results optimized for mobile",
      "pos": 3,
      "orient": "port"
    },
    {
      "path": "/images/projects/pca/scoresPlot.png",
      "title": "A scores plot generated from calculated principal components",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/pca/scoresData.png",
      "title": "The calculated principal component data",
      "pos": 2,
      "orient": "square"
    },
    {
      "path": "/images/projects/pca/addinBar.PNG",
      "title": "The Excel add-in bar used to add scores and loadings plots",
      "pos": 3,
      "orient": "land"
    },
    {
      "path": "/images/projects/pca/scoresInput-full.png",
      "title": "Input form that is dynamically populated based on the number of principal components",
      "pos": 4,
      "orient": "port"
    },
    {
      "path": "/images/projects/bms/bms_rawData.png",
      "title": "The raw data taken from the lab to be processed",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/bms/bms_formatForm.png",
      "title": "Input form used to select the worksheet to be processed",
      "pos": 2,
      "orient": "square"
    },
    {
      "path": "/images/projects/bms/bms_formattedData.png",
      "title": "The entire formatted data set",
      "pos": 3,
      "orient": "square"
    },
    {
      "path": "/images/projects/bms/bms_finalData.png",
      "title": "A further refined formatted data set used for plotting",
      "pos": 4,
      "orient": "square"
    },
    {
      "path": "/images/projects/bms/bms_graphForm.png",
      "title": "Input form used to select the variables to be plotted",
      "pos": 5,
      "orient": "square"
    },
    {
      "path": "/images/projects/bms/bms_plot.png",
      "title": "The final plot",
      "pos": 6,
      "orient": "square"
    },
    {
      "path": "/images/projects/lol_status/gui.png",
      "title": "The Java GUI that displays the current status of services in a specified region",
      "pos": 1,
      "orient": "square"
    },
    {
      "path": "/images/projects/lol_status/polling.png",
      "title": "Input form that allows users to specify how often the GUI updates",
      "pos": 2,
      "orient": "square"
    },
    {
      "path": "/images/projects/lol_status/tray.png",
      "title": "Notification area functionality",
      "pos": 3,
      "orient": "square"
    },
    {
      "path": "/images/projects/trumppet/trumppet_landing.png",
      "title": "Trumppet website landing page",
      "pos": 1,
      "orient": "land"
    },
    {
      "path": "/images/projects/trumppet/trumppet_playback.png",
      "title": "Playback screen that displays a list of  previous tweets",
      "pos": 2,
      "orient": "square"
    },
    {
      "path": "/images/projects/trumppet/trumppet_freq.png",
      "title": "Displays a list of unique words and the number of times they're used throughout the tweet database",
      "pos": 3,
      "orient": "square"
    },
    {
      "path": "/images/projects/trumppet/trumppet_search.png",
      "title": "Searches the tweet database for a specified word or phrase",
      "pos": 4,
      "orient": "square"
    },
    {
      "path": "/images/projects/trumppet/trumppet_freestyle.png",
      "title": "Generates a Trumpian-style tweet: Sentance. Sentance. Exclamation! (NOTE: these tweets are not real)",
      "pos": 5,
      "orient": "square"
    },
    {
      "path": "https://raw.githubusercontent.com/chrismeyers/pleasehold/master/examples/pleasehold.gif",
      "title": "Demo of pleasehold",
      "pos": 1,
      "orient": "land"
    }
  ],
  "builds": [
    {
      "date": "March 2012 - Built for my brother, Matt",
      "started": 20120301,
      "cpu": "AMD 6-core FX-6100 @ 3.3GHz",
      "cool": null,
      "mobo": "Gigabyte 990FXA-UD3",
      "ram": "8GB G.SKILL Ripjaws Series 1600MHz",
      "hdd": "WD5000AAKX 500GB @ 7200rpm",
      "ssd": null,
      "gpu": "XFX Radeon 6870 1GB",
      "active": true,
      "image": 1
    },
    {
      "date": "February 2013 - Built for myself",
      "started": 20130201,
      "cpu": "Intel Core i7 3770k @ 4.2GHz",
      "cool": "Cooler Master Hyper 212 Plus",
      "mobo": "Asus P8Z77-V LK",
      "ram": "16GB Corsair Vengeance 1600MHz",
      "hdd": "WD6400AAKS 640GB @ 7200rpm, ST31000524AS 1TB @ 7200rpm",
      "ssd": "Samsung 850 Pro 256GB",
      "gpu": "EVGA GeForce GTX 670 FTW 2GB",
      "active": true,
      "image": 2
    },
    {
      "date": "September 2013 - Built for my Neighbor, Mark",
      "started": 20130901,
      "cpu": "Intel Core i7 4770k @ 3.5GHz",
      "cool": "Cooler Master Hyper 212 EVO",
      "mobo": "MSI H87-G43",
      "ram": "16GB G.SKILL Ripjaws X Series 1600MHz",
      "hdd": "ST1000DM003 1TB @ 7200rpm",
      "ssd": "Kingston HyperX 3K 120GB",
      "gpu": "EVGA GeForce GTX 770 SuperClocked 2GB",
      "active": true,
      "image": 3
    },
    {
      "date": "February 2016 - Built for myself",
      "started": 20160201,
      "cpu": "Intel Core i7 6700k @ 4.6GHz",
      "cool": "Corsair H100i v2 w/ Noctua NF-F12 120mm PWM Fans",
      "mobo": "Asus Republic of Gamers Maximus VIII Hero Alpha",
      "ram": "32GB HyperX Fury 2666MHz",
      "hdd": "Western Digital Blue 1TB @ 7200rpm",
      "ssd": "Samsung 850 EVO 500GB",
      "gpu": "EVGA GeForce GTX 980 Ti 6GB",
      "active": true,
      "image": 4
    },
    {
      "date": "September 2017 - Built for my friend, James",
      "started": 20170901,
      "cpu": "Intel Core i7-7700K @ 4.2GHz",
      "cool": "Corsair H100i v2",
      "mobo": "ASUS Republic of Gamers STRIX Z270E",
      "ram": "32GB HyperX Fury 2666MHz",
      "hdd": "Western Digital Blue 1TB @ 7200rpm",
      "ssd": "SAMSUNG 960 EVO M.2 500GB",
      "gpu": "EVGA GeForce GTX 1080 Ti FTW3 11GB",
      "active": true,
      "image": 5
    }
  ],
  "projects": [
    {
      "title": "chrismeyers.info, this website",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/chrismeyers.info",
      "date": "Personal Project, Fall 2013",
      "started": 20130901,
      "lang": "Dart (<a href=\"https://aqueduct.io\" class=\"fancytxt\" target=\"_blank\">Aqueduct</a>), Javascript (<a href=\"https://vuejs.org\" class=\"fancytxt\" target=\"_blank\">Vue</a>), PostgreSQL",
      "info": "A digital representation of myself. A complete rewrite of this website was done in November 2018. The original code can be found <a href=\"https://github.com/chrismeyers/CM_WEBSITE\" class=\"fancytxt\" target=\"_blank\">here</a>.",
      "role": "Solo project",
      "stat": "Being maintained",
      "active": true,
      "images": []
    },
    {
      "title": "Genomic Solutions Now! Software",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/Genomic_SWE",
      "date": "Software Engineering I, Rowan University, Spring 2014",
      "started": 20140301,
      "lang": "Java",
      "info": "An application built for <a href=\"https://genomainternational.com\" class=\"fancytxt\" target=\"_blank\">Genomic Solutions Now</a> that simplifies the patient reports generated by a lab.",
      "role": "Responsible for parsing the input reports. I also handled outputting the simplified reports to an Excel spreadsheet.",
      "stat": "Complete",
      "active": true,
      "images": [
        6
      ]
    },
    {
      "title": "Pinelands Tour Maker",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/WEB_PROG/tree/master/public_html/pinelands",
      "date": "Web Programming, Rowan University, Spring 2014",
      "started": 20140302,
      "lang": "PHP, Javascript, MySQL",
      "info": "An application that makes tours depending on selected points of interest.",
      "role": "Solo project",
      "stat": "Complete",
      "active": true,
      "images": [
        7,
        8,
        9
      ]
    },
    {
      "title": "Tic Tac Toe Android App",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/Android-TicTacToe",
      "date": "Intro to Android Programming, Rowan University, Summer 2014",
      "started": 20140601,
      "lang": "Java",
      "info": "An android version of tic tac toe",
      "role": "Solo Project",
      "stat": "Complete",
      "active": true,
      "images": [
        10,
        11
      ]
    },
    {
      "title": "League of Legends Player Data Parser",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/LoL_player_data",
      "date": "Personal Project, Summer 2014",
      "started": 20140602,
      "lang": "PHP",
      "info": "An application based on the video game <i>League of Legends</i> that utilizes the Riot Games API to query and parse player data for a specified player.<br><br><i>Note: Due to the deprecation of the stats-v1.3 API endpoint, this web application no longer pulls live data.</i>",
      "role": "Solo Project",
      "stat": "Complete",
      "active": true,
      "images": [
        12,
        13,
        14
      ]
    },
    {
      "title": "PCA Visualization",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/SeniorProj_BMS_PCA",
      "date": "Senior Project, Rowan University, Fall 2014",
      "started": 20140901,
      "lang": "C#",
      "info": "Principal component analysis (PCA) is a technique used to reduce dimensionality of a multivariate data set in order to better understand potentially correlated data. The goal of this project was to take an Excel add-in developed by Bristol-Myers Squibb and further develop it to have visualization functionality.",
      "role": "Responsible for parsing the calculated principal component worksheets and storing them in data structures used for plotting.",
      "stat": "Complete",
      "active": true,
      "images": [
        15,
        16,
        17,
        18
      ]
    },
    {
      "title": "Cardiomyocyte Data Analysis Automation",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/BMS_Meyers_ExcelAutomation",
      "date": "Personal Project, Winter 2014",
      "started": 20141201,
      "lang": "C#",
      "info": "An Excel add-in that was developed to automate data analysis for Dan Meyers, scientist at Bristol-Myers Squibb pharmaceutical company. The add-in takes in a raw data set, formats the data, performs statistical calculations and plots specified variables to a column graph. Data is extracted from an <a href=\"http://www.ionoptix.com/\" class=\"fancytxt\" target=\"_blank\">IonOptix</a> contraction/calcium monitoring system and is an important add-in for data analysis.",
      "role": "Solo Project",
      "stat": "Complete",
      "active": true,
      "images": [
        19,
        20,
        21,
        22,
        23,
        24
      ]
    },
    {
      "title": "League of Legends Server Status Checker",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/rito-pls",
      "date": "Personal Project, June 2015",
      "started": 20150601,
      "lang": "Java",
      "info": "A Java application that reports current <i>League of Legends</i> service statuses for a specified region. The application queries the <i>League of Legends</i> API periodically and presents the current status of several services (Boards/Forums, Game, Store and Website).<br><br>The purpose of this project was to get more practice with Java GUI building and multithreaded programming. The polling operation takes place on a new thread that allows for the program to function normally while maintaining periodic server checks.<br><br><i>Note: Due to several changes to the Riot Games API, this application is no longer maintained and is not guaranteed to work.</i>",
      "role": "Solo Project",
      "stat": "Complete",
      "active": true,
      "images": [
        25,
        26,
        27
      ]
    },
    {
      "title": "GPS Importer",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/gps_importer",
      "date": "Personal Project, July 2017",
      "started": 20170701,
      "lang": "Python",
      "info": "Before a vacation, I was tasked with entering addresses into a Garmin GPS.  Instead of manually entering each address on the cramped GPS keyboard, I decided to create an application to automate the process.  This Command Line application imports a .csv file of addresses and generates a .csv file that can be imported into a Garmin GPS device.",
      "role": "Solo Project",
      "stat": "Complete",
      "active": true,
      "images": []
    },
    {
      "title": "Trumppet",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/trumppet",
      "date": "Personal Project, February 2018",
      "started": 20180201,
      "lang": "Python",
      "info": "Trumppet is a Donald Trump tweet analyzer that periodically retrieves tweets from Donald Trump (<a href=\"https://twitter.com/realDonaldTrump\" class=\"fancytxt\" target=\"_blank\">@realDonaldTrump</a>) and stores the data in a MongoDB database. Linguistic analysis is then performed on this data.<br><br>This project is comprised of four components: trumppet-client, trumppet-server, a Flask REST API connecting the two, and a website.",
      "role": "Solo Project",
      "stat": "Complete",
      "active": true,
      "images": [
        28,
        29,
        30,
        31,
        32
      ]
    },
    {
      "title": "pleasehold",
      "webUrl": null,
      "codeUrl": "https://github.com/chrismeyers/pleasehold",
      "date": "Personal Project, February 2019",
      "started": 20190201,
      "lang": "Python",
      "info": "pleasehold is a Python package that outputs multi-part messages on the same line with a loading bar in between. It's useful for providing an indication that a script is still running during long running processes.<br><br>I began this project as a way to experiment with multithreading in Python. While long running processes run on the main thread, the rendering of a loading bar takes place on a separate thread. This project also provided the opportunity to learn about and implement context managers.",
      "role": "Solo Project",
      "stat": "In Development",
      "active": true,
      "images": [
        33
      ]
    }
  ]
}